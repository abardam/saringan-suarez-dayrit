//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Core", "FK_Country_UserAccount", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.Country), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_EventComment", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Event), "EventComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventComment), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_Location", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Location), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_Event_MediaElement", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Event), "MediaElement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.MediaElement), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_EventCategory_Event", "EventCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.EventCategory), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccount_Event", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_VisibilityType_Event", "VisibilityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.VisibilityType), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccount_EventCategory", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "EventCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventCategory), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccount_EventComment", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "EventComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventComment), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccount_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Gender), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_LogEventType_LogEvent", "LogEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.LogEventType), "LogEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.LogEvent), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccount_LogEventType", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.UserAccount), "LogEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.LogEventType), true)]
[assembly: EdmRelationshipAttribute("Core", "FK_UserAccountType_UserAccount", "UserAccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccountType), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Paths), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Me__UserI__45F365D3", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("Core", "FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("Core", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.aspnet_Users))]
[assembly: EdmRelationshipAttribute("Core", "aspnet_UsersUserAccount", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.aspnet_Users), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]

#endregion

namespace Omnipresence.DataAccess.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CoreContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CoreContainer object using the connection string found in the 'CoreContainer' section of the application configuration file.
        /// </summary>
        public CoreContainer() : base("name=CoreContainer", "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreContainer object.
        /// </summary>
        public CoreContainer(string connectionString) : base(connectionString, "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CoreContainer object.
        /// </summary>
        public CoreContainer(EntityConnection connection) : base(connection, "CoreContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventCategory> EventCategories
        {
            get
            {
                if ((_EventCategories == null))
                {
                    _EventCategories = base.CreateObjectSet<EventCategory>("EventCategories");
                }
                return _EventCategories;
            }
        }
        private ObjectSet<EventCategory> _EventCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventComment> EventComments
        {
            get
            {
                if ((_EventComments == null))
                {
                    _EventComments = base.CreateObjectSet<EventComment>("EventComments");
                }
                return _EventComments;
            }
        }
        private ObjectSet<EventComment> _EventComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Genders
        {
            get
            {
                if ((_Genders == null))
                {
                    _Genders = base.CreateObjectSet<Gender>("Genders");
                }
                return _Genders;
            }
        }
        private ObjectSet<Gender> _Genders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEvent> LogEvents
        {
            get
            {
                if ((_LogEvents == null))
                {
                    _LogEvents = base.CreateObjectSet<LogEvent>("LogEvents");
                }
                return _LogEvents;
            }
        }
        private ObjectSet<LogEvent> _LogEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEventType> LogEventTypes
        {
            get
            {
                if ((_LogEventTypes == null))
                {
                    _LogEventTypes = base.CreateObjectSet<LogEventType>("LogEventTypes");
                }
                return _LogEventTypes;
            }
        }
        private ObjectSet<LogEventType> _LogEventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaElement> MediaElements
        {
            get
            {
                if ((_MediaElements == null))
                {
                    _MediaElements = base.CreateObjectSet<MediaElement>("MediaElements");
                }
                return _MediaElements;
            }
        }
        private ObjectSet<MediaElement> _MediaElements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountType> UserAccountTypes
        {
            get
            {
                if ((_UserAccountTypes == null))
                {
                    _UserAccountTypes = base.CreateObjectSet<UserAccountType>("UserAccountTypes");
                }
                return _UserAccountTypes;
            }
        }
        private ObjectSet<UserAccountType> _UserAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VisibilityType> VisibilityTypes
        {
            get
            {
                if ((_VisibilityTypes == null))
                {
                    _VisibilityTypes = base.CreateObjectSet<VisibilityType>("VisibilityTypes");
                }
                return _VisibilityTypes;
            }
        }
        private ObjectSet<VisibilityType> _VisibilityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventCategories(EventCategory eventCategory)
        {
            base.AddObject("EventCategories", eventCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventComments(EventComment eventComment)
        {
            base.AddObject("EventComments", eventComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenders(Gender gender)
        {
            base.AddObject("Genders", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEvents(LogEvent logEvent)
        {
            base.AddObject("LogEvents", logEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEventTypes(LogEventType logEventType)
        {
            base.AddObject("LogEventTypes", logEventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaElements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaElements(MediaElement mediaElement)
        {
            base.AddObject("MediaElements", mediaElement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountTypes(UserAccountType userAccountType)
        {
            base.AddObject("UserAccountTypes", userAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VisibilityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisibilityTypes(VisibilityType visibilityType)
        {
            base.AddObject("VisibilityTypes", visibilityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Me__Appli__44FF419A", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Ro__Appli__6754599E", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Us__Appli__30F848ED", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Core.FK__aspnet_Me__Appli__44FF419A", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Me__UserI__45F365D3", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.ApplicationId = applicationId;
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Core.FK__aspnet_Pa__Appli__7E37BEF6", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__PathI__0B91BA14", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__05D8E0BE", "aspnet_Paths", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("Core.FK__aspnet_Pe__PathI__0B91BA14", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="propertyValuesBinary">Initial value of the PropertyValuesBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.PropertyValuesBinary = propertyValuesBinary;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Core.FK__aspnet_Ro__Appli__6754599E", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("Core.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("Core.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("Core.FK__aspnet_Us__Appli__30F848ED", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Me__UserI__45F365D3", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Core.FK__aspnet_Me__UserI__45F365D3", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("Core.FK__aspnet_Pe__UserI__0C85DE4D", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("Core.FK__aspnet_Pr__UserI__5BE2A6F2", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("Core.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("Core.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "aspnet_UsersUserAccount", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("Core.aspnet_UsersUserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("Core.aspnet_UsersUserAccount", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String countryName, global::System.Int32 createdByUserAccountId)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.CountryName = countryName;
            country.CreatedByUserAccountId = createdByUserAccountId;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] CountryFlag
        {
            get
            {
                return StructuralObject.GetValidValue(_CountryFlag);
            }
            set
            {
                OnCountryFlagChanging(value);
                ReportPropertyChanging("CountryFlag");
                _CountryFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryFlag");
                OnCountryFlagChanged();
            }
        }
        private global::System.Byte[] _CountryFlag;
        partial void OnCountryFlagChanging(global::System.Byte[] value);
        partial void OnCountryFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Country_UserAccount", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("Core.FK_Country_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("Core.FK_Country_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="reputation">Initial value of the Reputation property.</param>
        /// <param name="deletionTime">Initial value of the DeletionTime property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        /// <param name="visibilityTypeId">Initial value of the VisibilityTypeId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.String description, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 reputation, global::System.DateTime deletionTime, global::System.Int32 createdByUserAccountId, global::System.Int32 visibilityTypeId, global::System.Int32 locationId)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.Description = description;
            @event.StartTime = startTime;
            @event.EndTime = endTime;
            @event.Reputation = reputation;
            @event.DeletionTime = deletionTime;
            @event.CreatedByUserAccountId = createdByUserAccountId;
            @event.VisibilityTypeId = visibilityTypeId;
            @event.LocationId = locationId;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reputation
        {
            get
            {
                return _Reputation;
            }
            set
            {
                OnReputationChanging(value);
                ReportPropertyChanging("Reputation");
                _Reputation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reputation");
                OnReputationChanged();
            }
        }
        private global::System.Int32 _Reputation;
        partial void OnReputationChanging(global::System.Int32 value);
        partial void OnReputationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationTime;
        partial void OnCreationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeletionTime
        {
            get
            {
                return _DeletionTime;
            }
            set
            {
                OnDeletionTimeChanging(value);
                ReportPropertyChanging("DeletionTime");
                _DeletionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletionTime");
                OnDeletionTimeChanged();
            }
        }
        private global::System.DateTime _DeletionTime;
        partial void OnDeletionTimeChanging(global::System.DateTime value);
        partial void OnDeletionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventCategoryId
        {
            get
            {
                return _EventCategoryId;
            }
            set
            {
                OnEventCategoryIdChanging(value);
                ReportPropertyChanging("EventCategoryId");
                _EventCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCategoryId");
                OnEventCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EventCategoryId;
        partial void OnEventCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnEventCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityTypeId
        {
            get
            {
                return _VisibilityTypeId;
            }
            set
            {
                OnVisibilityTypeIdChanging(value);
                ReportPropertyChanging("VisibilityTypeId");
                _VisibilityTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibilityTypeId");
                OnVisibilityTypeIdChanged();
            }
        }
        private global::System.Int32 _VisibilityTypeId;
        partial void OnVisibilityTypeIdChanging(global::System.Int32 value);
        partial void OnVisibilityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_EventComment", "EventComment")]
        public EntityCollection<EventComment> EventComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventComment>("Core.FK_Event_EventComment", "EventComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventComment>("Core.FK_Event_EventComment", "EventComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("Core.FK_Event_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("Core.FK_Event_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_MediaElement", "MediaElement")]
        public EntityCollection<MediaElement> MediaElements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaElement>("Core.FK_Event_MediaElement", "MediaElement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaElement>("Core.FK_Event_MediaElement", "MediaElement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_EventCategory_Event", "EventCategory")]
        public EventCategory EventCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("Core.FK_EventCategory_Event", "EventCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("Core.FK_EventCategory_Event", "EventCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventCategory> EventCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("Core.FK_EventCategory_Event", "EventCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventCategory>("Core.FK_EventCategory_Event", "EventCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_Event", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_Event", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_Event", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_Event", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("Core.FK_UserAccount_Event", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_VisibilityType_Event", "VisibilityType")]
        public VisibilityType VisibilityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("Core.FK_VisibilityType_Event", "VisibilityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("Core.FK_VisibilityType_Event", "VisibilityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VisibilityType> VisibilityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("Core.FK_VisibilityType_Event", "VisibilityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VisibilityType>("Core.FK_VisibilityType_Event", "VisibilityType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="EventCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventCategory object.
        /// </summary>
        /// <param name="eventCategoryId">Initial value of the EventCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static EventCategory CreateEventCategory(global::System.Int32 eventCategoryId, global::System.String categoryName, global::System.Byte[] icon, global::System.Int32 createdByUserAccountId)
        {
            EventCategory eventCategory = new EventCategory();
            eventCategory.EventCategoryId = eventCategoryId;
            eventCategory.CategoryName = categoryName;
            eventCategory.Icon = icon;
            eventCategory.CreatedByUserAccountId = createdByUserAccountId;
            return eventCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCategoryId
        {
            get
            {
                return _EventCategoryId;
            }
            set
            {
                if (_EventCategoryId != value)
                {
                    OnEventCategoryIdChanging(value);
                    ReportPropertyChanging("EventCategoryId");
                    _EventCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventCategoryId");
                    OnEventCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _EventCategoryId;
        partial void OnEventCategoryIdChanging(global::System.Int32 value);
        partial void OnEventCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Icon
        {
            get
            {
                return StructuralObject.GetValidValue(_Icon);
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.Byte[] _Icon;
        partial void OnIconChanging(global::System.Byte[] value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_EventCategory_Event", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_EventCategory_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_EventCategory_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_EventCategory", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventCategory", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventCategory", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventCategory", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("Core.FK_UserAccount_EventCategory", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="EventComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventComment object.
        /// </summary>
        /// <param name="eventCommentId">Initial value of the EventCommentId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        public static EventComment CreateEventComment(global::System.Int32 eventCommentId, global::System.String comment, global::System.Byte[] timestamp, global::System.Int32 createdByUserAccountId, global::System.Int32 eventId)
        {
            EventComment eventComment = new EventComment();
            eventComment.EventCommentId = eventCommentId;
            eventComment.Comment = comment;
            eventComment.Timestamp = timestamp;
            eventComment.CreatedByUserAccountId = createdByUserAccountId;
            eventComment.EventId = eventId;
            return eventComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCommentId
        {
            get
            {
                return _EventCommentId;
            }
            set
            {
                if (_EventCommentId != value)
                {
                    OnEventCommentIdChanging(value);
                    ReportPropertyChanging("EventCommentId");
                    _EventCommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventCommentId");
                    OnEventCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _EventCommentId;
        partial void OnEventCommentIdChanging(global::System.Int32 value);
        partial void OnEventCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_EventComment", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_EventComment", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_EventComment", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_EventComment", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Core.FK_Event_EventComment", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_EventComment", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventComment", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventComment", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_EventComment", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("Core.FK_UserAccount_EventComment", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="genderId">Initial value of the GenderId property.</param>
        /// <param name="genderText">Initial value of the GenderText property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static Gender CreateGender(global::System.Int32 genderId, global::System.String genderText, global::System.Int32 createdByUserAccountId)
        {
            Gender gender = new Gender();
            gender.GenderId = genderId;
            gender.GenderText = genderText;
            gender.CreatedByUserAccountId = createdByUserAccountId;
            return gender;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                if (_GenderId != value)
                {
                    OnGenderIdChanging(value);
                    ReportPropertyChanging("GenderId");
                    _GenderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenderId");
                    OnGenderIdChanged();
                }
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderText
        {
            get
            {
                return _GenderText;
            }
            set
            {
                OnGenderTextChanging(value);
                ReportPropertyChanging("GenderText");
                _GenderText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenderText");
                OnGenderTextChanged();
            }
        }
        private global::System.String _GenderText;
        partial void OnGenderTextChanging(global::System.String value);
        partial void OnGenderTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GenderDescription
        {
            get
            {
                return _GenderDescription;
            }
            set
            {
                OnGenderDescriptionChanging(value);
                ReportPropertyChanging("GenderDescription");
                _GenderDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GenderDescription");
                OnGenderDescriptionChanged();
            }
        }
        private global::System.String _GenderDescription;
        partial void OnGenderDescriptionChanging(global::System.String value);
        partial void OnGenderDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_Gender", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("Core.FK_UserAccount_Gender", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("Core.FK_UserAccount_Gender", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.Double longitude, global::System.Double latitude)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.Longitude = longitude;
            location.Latitude = latitude;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_Location", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_Event_Location", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_Event_Location", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="LogEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEvent object.
        /// </summary>
        /// <param name="logEventId">Initial value of the LogEventId property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="logMessage">Initial value of the LogMessage property.</param>
        /// <param name="logEventTypeId">Initial value of the LogEventTypeId property.</param>
        public static LogEvent CreateLogEvent(global::System.Int32 logEventId, global::System.Byte[] timestamp, global::System.String logMessage, global::System.Int32 logEventTypeId)
        {
            LogEvent logEvent = new LogEvent();
            logEvent.LogEventId = logEventId;
            logEvent.Timestamp = timestamp;
            logEvent.LogMessage = logMessage;
            logEvent.LogEventTypeId = logEventTypeId;
            return logEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventId
        {
            get
            {
                return _LogEventId;
            }
            set
            {
                if (_LogEventId != value)
                {
                    OnLogEventIdChanging(value);
                    ReportPropertyChanging("LogEventId");
                    _LogEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogEventId");
                    OnLogEventIdChanged();
                }
            }
        }
        private global::System.Int32 _LogEventId;
        partial void OnLogEventIdChanging(global::System.Int32 value);
        partial void OnLogEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogMessage
        {
            get
            {
                return _LogMessage;
            }
            set
            {
                OnLogMessageChanging(value);
                ReportPropertyChanging("LogMessage");
                _LogMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogMessage");
                OnLogMessageChanged();
            }
        }
        private global::System.String _LogMessage;
        partial void OnLogMessageChanging(global::System.String value);
        partial void OnLogMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventTypeId
        {
            get
            {
                return _LogEventTypeId;
            }
            set
            {
                OnLogEventTypeIdChanging(value);
                ReportPropertyChanging("LogEventTypeId");
                _LogEventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogEventTypeId");
                OnLogEventTypeIdChanged();
            }
        }
        private global::System.Int32 _LogEventTypeId;
        partial void OnLogEventTypeIdChanging(global::System.Int32 value);
        partial void OnLogEventTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_LogEventType_LogEvent", "LogEventType")]
        public LogEventType LogEventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("Core.FK_LogEventType_LogEvent", "LogEventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("Core.FK_LogEventType_LogEvent", "LogEventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogEventType> LogEventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("Core.FK_LogEventType_LogEvent", "LogEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogEventType>("Core.FK_LogEventType_LogEvent", "LogEventType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="LogEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEventType object.
        /// </summary>
        /// <param name="logEventTypeId">Initial value of the LogEventTypeId property.</param>
        /// <param name="logEventTypeText">Initial value of the LogEventTypeText property.</param>
        public static LogEventType CreateLogEventType(global::System.Int32 logEventTypeId, global::System.String logEventTypeText)
        {
            LogEventType logEventType = new LogEventType();
            logEventType.LogEventTypeId = logEventTypeId;
            logEventType.LogEventTypeText = logEventTypeText;
            return logEventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventTypeId
        {
            get
            {
                return _LogEventTypeId;
            }
            set
            {
                if (_LogEventTypeId != value)
                {
                    OnLogEventTypeIdChanging(value);
                    ReportPropertyChanging("LogEventTypeId");
                    _LogEventTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogEventTypeId");
                    OnLogEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _LogEventTypeId;
        partial void OnLogEventTypeIdChanging(global::System.Int32 value);
        partial void OnLogEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogEventTypeText
        {
            get
            {
                return _LogEventTypeText;
            }
            set
            {
                OnLogEventTypeTextChanging(value);
                ReportPropertyChanging("LogEventTypeText");
                _LogEventTypeText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogEventTypeText");
                OnLogEventTypeTextChanged();
            }
        }
        private global::System.String _LogEventTypeText;
        partial void OnLogEventTypeTextChanging(global::System.String value);
        partial void OnLogEventTypeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_LogEventType_LogEvent", "LogEvent")]
        public EntityCollection<LogEvent> LogEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEvent>("Core.FK_LogEventType_LogEvent", "LogEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEvent>("Core.FK_LogEventType_LogEvent", "LogEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_LogEventType", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_LogEventType", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_LogEventType", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("Core.FK_UserAccount_LogEventType", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("Core.FK_UserAccount_LogEventType", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="MediaElement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaElement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaElement object.
        /// </summary>
        /// <param name="mediaElementId">Initial value of the MediaElementId property.</param>
        /// <param name="mediaUrl">Initial value of the MediaUrl property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        public static MediaElement CreateMediaElement(global::System.Int32 mediaElementId, global::System.String mediaUrl, global::System.String title, global::System.Int32 type, global::System.Double size, global::System.Int32 eventId, global::System.Int32 userAccountId)
        {
            MediaElement mediaElement = new MediaElement();
            mediaElement.MediaElementId = mediaElementId;
            mediaElement.MediaUrl = mediaUrl;
            mediaElement.Title = title;
            mediaElement.Type = type;
            mediaElement.Size = size;
            mediaElement.EventId = eventId;
            mediaElement.UserAccountId = userAccountId;
            return mediaElement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediaElementId
        {
            get
            {
                return _MediaElementId;
            }
            set
            {
                if (_MediaElementId != value)
                {
                    OnMediaElementIdChanging(value);
                    ReportPropertyChanging("MediaElementId");
                    _MediaElementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaElementId");
                    OnMediaElementIdChanged();
                }
            }
        }
        private global::System.Int32 _MediaElementId;
        partial void OnMediaElementIdChanging(global::System.Int32 value);
        partial void OnMediaElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaUrl
        {
            get
            {
                return _MediaUrl;
            }
            set
            {
                OnMediaUrlChanging(value);
                ReportPropertyChanging("MediaUrl");
                _MediaUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaUrl");
                OnMediaUrlChanged();
            }
        }
        private global::System.String _MediaUrl;
        partial void OnMediaUrlChanging(global::System.String value);
        partial void OnMediaUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Double _Size;
        partial void OnSizeChanging(global::System.Double value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                OnUserAccountIdChanging(value);
                ReportPropertyChanging("UserAccountId");
                _UserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountId");
                OnUserAccountIdChanged();
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Event_MediaElement", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_MediaElement", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_MediaElement", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("Core.FK_Event_MediaElement", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("Core.FK_Event_MediaElement", "Event", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="genderId">Initial value of the GenderId property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="reputation">Initial value of the Reputation property.</param>
        /// <param name="userAccountTypeId">Initial value of the UserAccountTypeId property.</param>
        /// <param name="aspnet_UserId">Initial value of the aspnet_UserId property.</param>
        public static UserAccount CreateUserAccount(global::System.Int32 userAccountId, global::System.String username, global::System.String password, global::System.DateTime birthdate, global::System.String firstName, global::System.String lastName, global::System.Int32 genderId, global::System.String emailAddress, global::System.Int32 reputation, global::System.Int32 userAccountTypeId, global::System.Guid aspnet_UserId)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.UserAccountId = userAccountId;
            userAccount.Username = username;
            userAccount.Password = password;
            userAccount.Birthdate = birthdate;
            userAccount.FirstName = firstName;
            userAccount.LastName = lastName;
            userAccount.GenderId = genderId;
            userAccount.EmailAddress = emailAddress;
            userAccount.Reputation = reputation;
            userAccount.UserAccountTypeId = userAccountTypeId;
            userAccount.aspnet_UserId = aspnet_UserId;
            return userAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                if (_UserAccountId != value)
                {
                    OnUserAccountIdChanging(value);
                    ReportPropertyChanging("UserAccountId");
                    _UserAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountId");
                    OnUserAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateEmailAddress
        {
            get
            {
                return _AlternateEmailAddress;
            }
            set
            {
                OnAlternateEmailAddressChanging(value);
                ReportPropertyChanging("AlternateEmailAddress");
                _AlternateEmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlternateEmailAddress");
                OnAlternateEmailAddressChanged();
            }
        }
        private global::System.String _AlternateEmailAddress;
        partial void OnAlternateEmailAddressChanging(global::System.String value);
        partial void OnAlternateEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reputation
        {
            get
            {
                return _Reputation;
            }
            set
            {
                OnReputationChanging(value);
                ReportPropertyChanging("Reputation");
                _Reputation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reputation");
                OnReputationChanged();
            }
        }
        private global::System.Int32 _Reputation;
        partial void OnReputationChanging(global::System.Int32 value);
        partial void OnReputationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AvatarImage
        {
            get
            {
                return StructuralObject.GetValidValue(_AvatarImage);
            }
            set
            {
                OnAvatarImageChanging(value);
                ReportPropertyChanging("AvatarImage");
                _AvatarImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AvatarImage");
                OnAvatarImageChanged();
            }
        }
        private global::System.Byte[] _AvatarImage;
        partial void OnAvatarImageChanging(global::System.Byte[] value);
        partial void OnAvatarImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Timezone;
        partial void OnTimezoneChanging(Nullable<global::System.Int32> value);
        partial void OnTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeId
        {
            get
            {
                return _UserAccountTypeId;
            }
            set
            {
                OnUserAccountTypeIdChanging(value);
                ReportPropertyChanging("UserAccountTypeId");
                _UserAccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountTypeId");
                OnUserAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _UserAccountTypeId;
        partial void OnUserAccountTypeIdChanging(global::System.Int32 value);
        partial void OnUserAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid aspnet_UserId
        {
            get
            {
                return _aspnet_UserId;
            }
            set
            {
                Onaspnet_UserIdChanging(value);
                ReportPropertyChanging("aspnet_UserId");
                _aspnet_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("aspnet_UserId");
                Onaspnet_UserIdChanged();
            }
        }
        private global::System.Guid _aspnet_UserId;
        partial void Onaspnet_UserIdChanging(global::System.Guid value);
        partial void Onaspnet_UserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_Country_UserAccount", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Core.FK_Country_UserAccount", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Core.FK_Country_UserAccount", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("Core.FK_Country_UserAccount", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("Core.FK_Country_UserAccount", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_Event", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_UserAccount_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_UserAccount_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_EventCategory", "EventCategory")]
        public EntityCollection<EventCategory> EventCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCategory>("Core.FK_UserAccount_EventCategory", "EventCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCategory>("Core.FK_UserAccount_EventCategory", "EventCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_EventComment", "EventComment")]
        public EntityCollection<EventComment> EventComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventComment>("Core.FK_UserAccount_EventComment", "EventComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventComment>("Core.FK_UserAccount_EventComment", "EventComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Core.FK_UserAccount_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Core.FK_UserAccount_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("Core.FK_UserAccount_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("Core.FK_UserAccount_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccount_LogEventType", "LogEventType")]
        public EntityCollection<LogEventType> LogEventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEventType>("Core.FK_UserAccount_LogEventType", "LogEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEventType>("Core.FK_UserAccount_LogEventType", "LogEventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccountType_UserAccount", "UserAccountType")]
        public UserAccountType UserAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("Core.FK_UserAccountType_UserAccount", "UserAccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("Core.FK_UserAccountType_UserAccount", "UserAccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccountType> UserAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("Core.FK_UserAccountType_UserAccount", "UserAccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccountType>("Core.FK_UserAccountType_UserAccount", "UserAccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "aspnet_UsersUserAccount", "aspnet_Users")]
        public aspnet_Users aspnet_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.aspnet_UsersUserAccount", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.aspnet_UsersUserAccount", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("Core.aspnet_UsersUserAccount", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("Core.aspnet_UsersUserAccount", "aspnet_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="UserAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountType object.
        /// </summary>
        /// <param name="userAccountTypeId">Initial value of the UserAccountTypeId property.</param>
        /// <param name="userTypeText">Initial value of the UserTypeText property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static UserAccountType CreateUserAccountType(global::System.Int32 userAccountTypeId, global::System.String userTypeText, global::System.Int32 createdByUserAccountId)
        {
            UserAccountType userAccountType = new UserAccountType();
            userAccountType.UserAccountTypeId = userAccountTypeId;
            userAccountType.UserTypeText = userTypeText;
            userAccountType.CreatedByUserAccountId = createdByUserAccountId;
            return userAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeId
        {
            get
            {
                return _UserAccountTypeId;
            }
            set
            {
                if (_UserAccountTypeId != value)
                {
                    OnUserAccountTypeIdChanging(value);
                    ReportPropertyChanging("UserAccountTypeId");
                    _UserAccountTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountTypeId");
                    OnUserAccountTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountTypeId;
        partial void OnUserAccountTypeIdChanging(global::System.Int32 value);
        partial void OnUserAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTypeText
        {
            get
            {
                return _UserTypeText;
            }
            set
            {
                OnUserTypeTextChanging(value);
                ReportPropertyChanging("UserTypeText");
                _UserTypeText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTypeText");
                OnUserTypeTextChanged();
            }
        }
        private global::System.String _UserTypeText;
        partial void OnUserTypeTextChanging(global::System.String value);
        partial void OnUserTypeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserTypeDescription
        {
            get
            {
                return _UserTypeDescription;
            }
            set
            {
                OnUserTypeDescriptionChanging(value);
                ReportPropertyChanging("UserTypeDescription");
                _UserTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserTypeDescription");
                OnUserTypeDescriptionChanged();
            }
        }
        private global::System.String _UserTypeDescription;
        partial void OnUserTypeDescriptionChanging(global::System.String value);
        partial void OnUserTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_UserAccountType_UserAccount", "UserAccount")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("Core.FK_UserAccountType_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("Core.FK_UserAccountType_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Core", Name="VisibilityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VisibilityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VisibilityType object.
        /// </summary>
        /// <param name="visibilityTypeId">Initial value of the VisibilityTypeId property.</param>
        /// <param name="visibilityText">Initial value of the VisibilityText property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static VisibilityType CreateVisibilityType(global::System.Int32 visibilityTypeId, global::System.String visibilityText, global::System.Int32 createdByUserAccountId)
        {
            VisibilityType visibilityType = new VisibilityType();
            visibilityType.VisibilityTypeId = visibilityTypeId;
            visibilityType.VisibilityText = visibilityText;
            visibilityType.CreatedByUserAccountId = createdByUserAccountId;
            return visibilityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityTypeId
        {
            get
            {
                return _VisibilityTypeId;
            }
            set
            {
                if (_VisibilityTypeId != value)
                {
                    OnVisibilityTypeIdChanging(value);
                    ReportPropertyChanging("VisibilityTypeId");
                    _VisibilityTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VisibilityTypeId");
                    OnVisibilityTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _VisibilityTypeId;
        partial void OnVisibilityTypeIdChanging(global::System.Int32 value);
        partial void OnVisibilityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VisibilityText
        {
            get
            {
                return _VisibilityText;
            }
            set
            {
                OnVisibilityTextChanging(value);
                ReportPropertyChanging("VisibilityText");
                _VisibilityText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VisibilityText");
                OnVisibilityTextChanged();
            }
        }
        private global::System.String _VisibilityText;
        partial void OnVisibilityTextChanging(global::System.String value);
        partial void OnVisibilityTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VisibilityDescription
        {
            get
            {
                return _VisibilityDescription;
            }
            set
            {
                OnVisibilityDescriptionChanging(value);
                ReportPropertyChanging("VisibilityDescription");
                _VisibilityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VisibilityDescription");
                OnVisibilityDescriptionChanged();
            }
        }
        private global::System.String _VisibilityDescription;
        partial void OnVisibilityDescriptionChanging(global::System.String value);
        partial void OnVisibilityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Core", "FK_VisibilityType_Event", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("Core.FK_VisibilityType_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("Core.FK_VisibilityType_Event", "Event", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
