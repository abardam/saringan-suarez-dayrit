//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProcessingTests.OmniService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OmniService.IOmniService")]
    public interface IOmniService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOmniService/AddEvent", ReplyAction="http://tempuri.org/IOmniService/AddEventResponse")]
        bool AddEvent(string title, string description, string categoryString, System.DateTime created, System.DateTime lastModified, System.DateTime startTime, System.DateTime endTime, string locationName, double latitude, double longitude, int rating, string visibilityTypeString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOmniService/AddUser", ReplyAction="http://tempuri.org/IOmniService/AddUserResponse")]
        bool AddUser(string username, string password, string email, string firstName, string lastName, System.DateTime birthdate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOmniServiceChannel : ProcessingTests.OmniService.IOmniService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OmniServiceClient : System.ServiceModel.ClientBase<ProcessingTests.OmniService.IOmniService>, ProcessingTests.OmniService.IOmniService {
        
        public OmniServiceClient() {
        }
        
        public OmniServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OmniServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OmniServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OmniServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddEvent(string title, string description, string categoryString, System.DateTime created, System.DateTime lastModified, System.DateTime startTime, System.DateTime endTime, string locationName, double latitude, double longitude, int rating, string visibilityTypeString) {
            return base.Channel.AddEvent(title, description, categoryString, created, lastModified, startTime, endTime, locationName, latitude, longitude, rating, visibilityTypeString);
        }
        
        public bool AddUser(string username, string password, string email, string firstName, string lastName, System.DateTime birthdate) {
            return base.Channel.AddUser(username, password, email, firstName, lastName, birthdate);
        }
    }
}
