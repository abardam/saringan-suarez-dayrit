//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_Country_UserAccount", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.Country), "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_EventCategory_Event", "EventCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.EventCategory), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_UserAccount_EventCategory", "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "EventCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventCategory), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_Event_EventComment", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Event), "EventComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventComment), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_UserAccount_EventComment", "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "EventComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.EventComment), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_Event_Location", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Location), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_Event_MediaElement", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.Event), "MediaElements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.MediaElement), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_UserAccount_Event", "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccount), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_VisibilityType_Event", "VisibilityTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.VisibilityType), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.Event), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_LogEventType_LogEvent", "LogEventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.LogEventType), "LogEvents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.LogEvent), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_UserAccount_LogEventType", "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Omnipresence.DataAccess.Core.UserAccount), "LogEventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.LogEventType), true)]
[assembly: EdmRelationshipAttribute("OmnipresenceModel", "FK_UserAccountType_UserAccount", "UserAccountTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Omnipresence.DataAccess.Core.UserAccountType), "UserAccounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Omnipresence.DataAccess.Core.UserAccount), true)]

#endregion

namespace Omnipresence.DataAccess.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OmnipresenceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OmnipresenceEntities object using the connection string found in the 'OmnipresenceEntities' section of the application configuration file.
        /// </summary>
        public OmnipresenceEntities() : base("name=OmnipresenceEntities", "OmnipresenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OmnipresenceEntities object.
        /// </summary>
        public OmnipresenceEntities(string connectionString) : base(connectionString, "OmnipresenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OmnipresenceEntities object.
        /// </summary>
        public OmnipresenceEntities(EntityConnection connection) : base(connection, "OmnipresenceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventCategory> EventCategories
        {
            get
            {
                if ((_EventCategories == null))
                {
                    _EventCategories = base.CreateObjectSet<EventCategory>("EventCategories");
                }
                return _EventCategories;
            }
        }
        private ObjectSet<EventCategory> _EventCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventComment> EventComments
        {
            get
            {
                if ((_EventComments == null))
                {
                    _EventComments = base.CreateObjectSet<EventComment>("EventComments");
                }
                return _EventComments;
            }
        }
        private ObjectSet<EventComment> _EventComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEvent> LogEvents
        {
            get
            {
                if ((_LogEvents == null))
                {
                    _LogEvents = base.CreateObjectSet<LogEvent>("LogEvents");
                }
                return _LogEvents;
            }
        }
        private ObjectSet<LogEvent> _LogEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEventType> LogEventTypes
        {
            get
            {
                if ((_LogEventTypes == null))
                {
                    _LogEventTypes = base.CreateObjectSet<LogEventType>("LogEventTypes");
                }
                return _LogEventTypes;
            }
        }
        private ObjectSet<LogEventType> _LogEventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MediaElement> MediaElements
        {
            get
            {
                if ((_MediaElements == null))
                {
                    _MediaElements = base.CreateObjectSet<MediaElement>("MediaElements");
                }
                return _MediaElements;
            }
        }
        private ObjectSet<MediaElement> _MediaElements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccounts
        {
            get
            {
                if ((_UserAccounts == null))
                {
                    _UserAccounts = base.CreateObjectSet<UserAccount>("UserAccounts");
                }
                return _UserAccounts;
            }
        }
        private ObjectSet<UserAccount> _UserAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccountType> UserAccountTypes
        {
            get
            {
                if ((_UserAccountTypes == null))
                {
                    _UserAccountTypes = base.CreateObjectSet<UserAccountType>("UserAccountTypes");
                }
                return _UserAccountTypes;
            }
        }
        private ObjectSet<UserAccountType> _UserAccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VisibilityType> VisibilityTypes
        {
            get
            {
                if ((_VisibilityTypes == null))
                {
                    _VisibilityTypes = base.CreateObjectSet<VisibilityType>("VisibilityTypes");
                }
                return _VisibilityTypes;
            }
        }
        private ObjectSet<VisibilityType> _VisibilityTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventCategories(EventCategory eventCategory)
        {
            base.AddObject("EventCategories", eventCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventComments(EventComment eventComment)
        {
            base.AddObject("EventComments", eventComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEvents(LogEvent logEvent)
        {
            base.AddObject("LogEvents", logEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEventTypes(LogEventType logEventType)
        {
            base.AddObject("LogEventTypes", logEventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MediaElements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMediaElements(MediaElement mediaElement)
        {
            base.AddObject("MediaElements", mediaElement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccounts(UserAccount userAccount)
        {
            base.AddObject("UserAccounts", userAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccountTypes(UserAccountType userAccountType)
        {
            base.AddObject("UserAccountTypes", userAccountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VisibilityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVisibilityTypes(VisibilityType visibilityType)
        {
            base.AddObject("VisibilityTypes", visibilityType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String countryName, global::System.Int32 createdByUserAccountId)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.CountryName = countryName;
            country.CreatedByUserAccountId = createdByUserAccountId;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] CountryFlag
        {
            get
            {
                return StructuralObject.GetValidValue(_CountryFlag);
            }
            set
            {
                OnCountryFlagChanging(value);
                ReportPropertyChanging("CountryFlag");
                _CountryFlag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryFlag");
                OnCountryFlagChanged();
            }
        }
        private global::System.Byte[] _CountryFlag;
        partial void OnCountryFlagChanging(global::System.Byte[] value);
        partial void OnCountryFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Country_UserAccount", "UserAccounts")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("OmnipresenceModel.FK_Country_UserAccount", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("OmnipresenceModel.FK_Country_UserAccount", "UserAccounts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="reputation">Initial value of the Reputation property.</param>
        /// <param name="deletionTime">Initial value of the DeletionTime property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        /// <param name="visibilityTypeId">Initial value of the VisibilityTypeId property.</param>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        public static Event CreateEvent(global::System.Int32 eventId, global::System.String description, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 reputation, global::System.DateTime deletionTime, global::System.Int32 createdByUserAccountId, global::System.Int32 visibilityTypeId, global::System.Int32 locationId)
        {
            Event @event = new Event();
            @event.EventId = eventId;
            @event.Description = description;
            @event.StartTime = startTime;
            @event.EndTime = endTime;
            @event.Reputation = reputation;
            @event.DeletionTime = deletionTime;
            @event.CreatedByUserAccountId = createdByUserAccountId;
            @event.VisibilityTypeId = visibilityTypeId;
            @event.LocationId = locationId;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reputation
        {
            get
            {
                return _Reputation;
            }
            set
            {
                OnReputationChanging(value);
                ReportPropertyChanging("Reputation");
                _Reputation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reputation");
                OnReputationChanged();
            }
        }
        private global::System.Int32 _Reputation;
        partial void OnReputationChanging(global::System.Int32 value);
        partial void OnReputationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationTime;
        partial void OnCreationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeletionTime
        {
            get
            {
                return _DeletionTime;
            }
            set
            {
                OnDeletionTimeChanging(value);
                ReportPropertyChanging("DeletionTime");
                _DeletionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletionTime");
                OnDeletionTimeChanged();
            }
        }
        private global::System.DateTime _DeletionTime;
        partial void OnDeletionTimeChanging(global::System.DateTime value);
        partial void OnDeletionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventCategoryId
        {
            get
            {
                return _EventCategoryId;
            }
            set
            {
                OnEventCategoryIdChanging(value);
                ReportPropertyChanging("EventCategoryId");
                _EventCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCategoryId");
                OnEventCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EventCategoryId;
        partial void OnEventCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnEventCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityTypeId
        {
            get
            {
                return _VisibilityTypeId;
            }
            set
            {
                OnVisibilityTypeIdChanging(value);
                ReportPropertyChanging("VisibilityTypeId");
                _VisibilityTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VisibilityTypeId");
                OnVisibilityTypeIdChanged();
            }
        }
        private global::System.Int32 _VisibilityTypeId;
        partial void OnVisibilityTypeIdChanging(global::System.Int32 value);
        partial void OnVisibilityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                OnLocationIdChanging(value);
                ReportPropertyChanging("LocationId");
                _LocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationId");
                OnLocationIdChanged();
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_EventCategory_Event", "EventCategories")]
        public EventCategory EventCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("OmnipresenceModel.FK_EventCategory_Event", "EventCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("OmnipresenceModel.FK_EventCategory_Event", "EventCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventCategory> EventCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventCategory>("OmnipresenceModel.FK_EventCategory_Event", "EventCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventCategory>("OmnipresenceModel.FK_EventCategory_Event", "EventCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_EventComment", "EventComments")]
        public EntityCollection<EventComment> EventComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventComment>("OmnipresenceModel.FK_Event_EventComment", "EventComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventComment>("OmnipresenceModel.FK_Event_EventComment", "EventComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_Location", "Locations")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("OmnipresenceModel.FK_Event_Location", "Locations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("OmnipresenceModel.FK_Event_Location", "Locations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("OmnipresenceModel.FK_Event_Location", "Locations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("OmnipresenceModel.FK_Event_Location", "Locations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_MediaElement", "MediaElements")]
        public EntityCollection<MediaElement> MediaElements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MediaElement>("OmnipresenceModel.FK_Event_MediaElement", "MediaElements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MediaElement>("OmnipresenceModel.FK_Event_MediaElement", "MediaElements", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_Event", "UserAccounts")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_Event", "UserAccounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_Event", "UserAccounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_Event", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_Event", "UserAccounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_VisibilityType_Event", "VisibilityTypes")]
        public VisibilityType VisibilityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("OmnipresenceModel.FK_VisibilityType_Event", "VisibilityTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("OmnipresenceModel.FK_VisibilityType_Event", "VisibilityTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VisibilityType> VisibilityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VisibilityType>("OmnipresenceModel.FK_VisibilityType_Event", "VisibilityTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VisibilityType>("OmnipresenceModel.FK_VisibilityType_Event", "VisibilityTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="EventCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventCategory object.
        /// </summary>
        /// <param name="eventCategoryId">Initial value of the EventCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static EventCategory CreateEventCategory(global::System.Int32 eventCategoryId, global::System.String categoryName, global::System.Byte[] icon, global::System.Int32 createdByUserAccountId)
        {
            EventCategory eventCategory = new EventCategory();
            eventCategory.EventCategoryId = eventCategoryId;
            eventCategory.CategoryName = categoryName;
            eventCategory.Icon = icon;
            eventCategory.CreatedByUserAccountId = createdByUserAccountId;
            return eventCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCategoryId
        {
            get
            {
                return _EventCategoryId;
            }
            set
            {
                if (_EventCategoryId != value)
                {
                    OnEventCategoryIdChanging(value);
                    ReportPropertyChanging("EventCategoryId");
                    _EventCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventCategoryId");
                    OnEventCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _EventCategoryId;
        partial void OnEventCategoryIdChanging(global::System.Int32 value);
        partial void OnEventCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Icon
        {
            get
            {
                return StructuralObject.GetValidValue(_Icon);
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.Byte[] _Icon;
        partial void OnIconChanging(global::System.Byte[] value);
        partial void OnIconChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_EventCategory_Event", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OmnipresenceModel.FK_EventCategory_Event", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OmnipresenceModel.FK_EventCategory_Event", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_EventCategory", "UserAccounts")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventCategory", "UserAccounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventCategory", "UserAccounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventCategory", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventCategory", "UserAccounts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="EventComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventComment object.
        /// </summary>
        /// <param name="eventCommentId">Initial value of the EventCommentId property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        public static EventComment CreateEventComment(global::System.Int32 eventCommentId, global::System.String comment, global::System.Byte[] timestamp, global::System.Int32 createdByUserAccountId, global::System.Int32 eventId)
        {
            EventComment eventComment = new EventComment();
            eventComment.EventCommentId = eventCommentId;
            eventComment.Comment = comment;
            eventComment.Timestamp = timestamp;
            eventComment.CreatedByUserAccountId = createdByUserAccountId;
            eventComment.EventId = eventId;
            return eventComment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCommentId
        {
            get
            {
                return _EventCommentId;
            }
            set
            {
                if (_EventCommentId != value)
                {
                    OnEventCommentIdChanging(value);
                    ReportPropertyChanging("EventCommentId");
                    _EventCommentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventCommentId");
                    OnEventCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _EventCommentId;
        partial void OnEventCommentIdChanging(global::System.Int32 value);
        partial void OnEventCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_EventComment", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_EventComment", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_EventComment", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_EventComment", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("OmnipresenceModel.FK_Event_EventComment", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_EventComment", "UserAccounts")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventComment", "UserAccounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventComment", "UserAccounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventComment", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_EventComment", "UserAccounts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        public static Location CreateLocation(global::System.Int32 locationId, global::System.Double longitude, global::System.Double latitude)
        {
            Location location = new Location();
            location.LocationId = locationId;
            location.Longitude = longitude;
            location.Latitude = latitude;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_Location", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OmnipresenceModel.FK_Event_Location", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OmnipresenceModel.FK_Event_Location", "Events", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="LogEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEvent object.
        /// </summary>
        /// <param name="logEventId">Initial value of the LogEventId property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="logMessage">Initial value of the LogMessage property.</param>
        /// <param name="logEventTypeId">Initial value of the LogEventTypeId property.</param>
        public static LogEvent CreateLogEvent(global::System.Int32 logEventId, global::System.Byte[] timestamp, global::System.String logMessage, global::System.Int32 logEventTypeId)
        {
            LogEvent logEvent = new LogEvent();
            logEvent.LogEventId = logEventId;
            logEvent.Timestamp = timestamp;
            logEvent.LogMessage = logMessage;
            logEvent.LogEventTypeId = logEventTypeId;
            return logEvent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventId
        {
            get
            {
                return _LogEventId;
            }
            set
            {
                if (_LogEventId != value)
                {
                    OnLogEventIdChanging(value);
                    ReportPropertyChanging("LogEventId");
                    _LogEventId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogEventId");
                    OnLogEventIdChanged();
                }
            }
        }
        private global::System.Int32 _LogEventId;
        partial void OnLogEventIdChanging(global::System.Int32 value);
        partial void OnLogEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogMessage
        {
            get
            {
                return _LogMessage;
            }
            set
            {
                OnLogMessageChanging(value);
                ReportPropertyChanging("LogMessage");
                _LogMessage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogMessage");
                OnLogMessageChanged();
            }
        }
        private global::System.String _LogMessage;
        partial void OnLogMessageChanging(global::System.String value);
        partial void OnLogMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventTypeId
        {
            get
            {
                return _LogEventTypeId;
            }
            set
            {
                OnLogEventTypeIdChanging(value);
                ReportPropertyChanging("LogEventTypeId");
                _LogEventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogEventTypeId");
                OnLogEventTypeIdChanged();
            }
        }
        private global::System.Int32 _LogEventTypeId;
        partial void OnLogEventTypeIdChanging(global::System.Int32 value);
        partial void OnLogEventTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_LogEventType_LogEvent", "LogEventTypes")]
        public LogEventType LogEventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEventTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LogEventType> LogEventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LogEventType>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LogEventType>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEventTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="LogEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEventType object.
        /// </summary>
        /// <param name="logEventTypeId">Initial value of the LogEventTypeId property.</param>
        /// <param name="logEventTypeText">Initial value of the LogEventTypeText property.</param>
        public static LogEventType CreateLogEventType(global::System.Int32 logEventTypeId, global::System.String logEventTypeText)
        {
            LogEventType logEventType = new LogEventType();
            logEventType.LogEventTypeId = logEventTypeId;
            logEventType.LogEventTypeText = logEventTypeText;
            return logEventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogEventTypeId
        {
            get
            {
                return _LogEventTypeId;
            }
            set
            {
                if (_LogEventTypeId != value)
                {
                    OnLogEventTypeIdChanging(value);
                    ReportPropertyChanging("LogEventTypeId");
                    _LogEventTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogEventTypeId");
                    OnLogEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _LogEventTypeId;
        partial void OnLogEventTypeIdChanging(global::System.Int32 value);
        partial void OnLogEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogEventTypeText
        {
            get
            {
                return _LogEventTypeText;
            }
            set
            {
                OnLogEventTypeTextChanging(value);
                ReportPropertyChanging("LogEventTypeText");
                _LogEventTypeText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogEventTypeText");
                OnLogEventTypeTextChanged();
            }
        }
        private global::System.String _LogEventTypeText;
        partial void OnLogEventTypeTextChanging(global::System.String value);
        partial void OnLogEventTypeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_LogEventType_LogEvent", "LogEvents")]
        public EntityCollection<LogEvent> LogEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEvent>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEvents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEvent>("OmnipresenceModel.FK_LogEventType_LogEvent", "LogEvents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_LogEventType", "UserAccounts")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_LogEventType", "UserAccounts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_LogEventType", "UserAccounts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_LogEventType", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("OmnipresenceModel.FK_UserAccount_LogEventType", "UserAccounts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="MediaElement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MediaElement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MediaElement object.
        /// </summary>
        /// <param name="mediaElementId">Initial value of the MediaElementId property.</param>
        /// <param name="mediaUrl">Initial value of the MediaUrl property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        public static MediaElement CreateMediaElement(global::System.Int32 mediaElementId, global::System.String mediaUrl, global::System.String title, global::System.Int32 type, global::System.Double size, global::System.Int32 eventId, global::System.Int32 userAccountId)
        {
            MediaElement mediaElement = new MediaElement();
            mediaElement.MediaElementId = mediaElementId;
            mediaElement.MediaUrl = mediaUrl;
            mediaElement.Title = title;
            mediaElement.Type = type;
            mediaElement.Size = size;
            mediaElement.EventId = eventId;
            mediaElement.UserAccountId = userAccountId;
            return mediaElement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MediaElementId
        {
            get
            {
                return _MediaElementId;
            }
            set
            {
                if (_MediaElementId != value)
                {
                    OnMediaElementIdChanging(value);
                    ReportPropertyChanging("MediaElementId");
                    _MediaElementId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MediaElementId");
                    OnMediaElementIdChanged();
                }
            }
        }
        private global::System.Int32 _MediaElementId;
        partial void OnMediaElementIdChanging(global::System.Int32 value);
        partial void OnMediaElementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MediaUrl
        {
            get
            {
                return _MediaUrl;
            }
            set
            {
                OnMediaUrlChanging(value);
                ReportPropertyChanging("MediaUrl");
                _MediaUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MediaUrl");
                OnMediaUrlChanged();
            }
        }
        private global::System.String _MediaUrl;
        partial void OnMediaUrlChanging(global::System.String value);
        partial void OnMediaUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Double _Size;
        partial void OnSizeChanging(global::System.Double value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                OnUserAccountIdChanging(value);
                ReportPropertyChanging("UserAccountId");
                _UserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountId");
                OnUserAccountIdChanged();
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Event_MediaElement", "Events")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_MediaElement", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_MediaElement", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("OmnipresenceModel.FK_Event_MediaElement", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("OmnipresenceModel.FK_Event_MediaElement", "Events", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="userAccountId">Initial value of the UserAccountId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="reputation">Initial value of the Reputation property.</param>
        /// <param name="userAccountTypeId">Initial value of the UserAccountTypeId property.</param>
        /// <param name="aspnet_UserId">Initial value of the aspnet_UserId property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        public static UserAccount CreateUserAccount(global::System.Int32 userAccountId, global::System.String username, global::System.String password, global::System.DateTime birthdate, global::System.String firstName, global::System.String lastName, global::System.String emailAddress, global::System.Int32 reputation, global::System.Int32 userAccountTypeId, global::System.Guid aspnet_UserId, global::System.Boolean gender)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.UserAccountId = userAccountId;
            userAccount.Username = username;
            userAccount.Password = password;
            userAccount.Birthdate = birthdate;
            userAccount.FirstName = firstName;
            userAccount.LastName = lastName;
            userAccount.EmailAddress = emailAddress;
            userAccount.Reputation = reputation;
            userAccount.UserAccountTypeId = userAccountTypeId;
            userAccount.aspnet_UserId = aspnet_UserId;
            userAccount.Gender = gender;
            return userAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountId
        {
            get
            {
                return _UserAccountId;
            }
            set
            {
                if (_UserAccountId != value)
                {
                    OnUserAccountIdChanging(value);
                    ReportPropertyChanging("UserAccountId");
                    _UserAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountId");
                    OnUserAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountId;
        partial void OnUserAccountIdChanging(global::System.Int32 value);
        partial void OnUserAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenderId;
        partial void OnGenderIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AlternateEmailAddress
        {
            get
            {
                return _AlternateEmailAddress;
            }
            set
            {
                OnAlternateEmailAddressChanging(value);
                ReportPropertyChanging("AlternateEmailAddress");
                _AlternateEmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AlternateEmailAddress");
                OnAlternateEmailAddressChanged();
            }
        }
        private global::System.String _AlternateEmailAddress;
        partial void OnAlternateEmailAddressChanging(global::System.String value);
        partial void OnAlternateEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reputation
        {
            get
            {
                return _Reputation;
            }
            set
            {
                OnReputationChanging(value);
                ReportPropertyChanging("Reputation");
                _Reputation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reputation");
                OnReputationChanged();
            }
        }
        private global::System.Int32 _Reputation;
        partial void OnReputationChanging(global::System.Int32 value);
        partial void OnReputationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AvatarImage
        {
            get
            {
                return StructuralObject.GetValidValue(_AvatarImage);
            }
            set
            {
                OnAvatarImageChanging(value);
                ReportPropertyChanging("AvatarImage");
                _AvatarImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AvatarImage");
                OnAvatarImageChanged();
            }
        }
        private global::System.Byte[] _AvatarImage;
        partial void OnAvatarImageChanging(global::System.Byte[] value);
        partial void OnAvatarImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Timezone
        {
            get
            {
                return _Timezone;
            }
            set
            {
                OnTimezoneChanging(value);
                ReportPropertyChanging("Timezone");
                _Timezone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timezone");
                OnTimezoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Timezone;
        partial void OnTimezoneChanging(Nullable<global::System.Int32> value);
        partial void OnTimezoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeId
        {
            get
            {
                return _UserAccountTypeId;
            }
            set
            {
                OnUserAccountTypeIdChanging(value);
                ReportPropertyChanging("UserAccountTypeId");
                _UserAccountTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserAccountTypeId");
                OnUserAccountTypeIdChanged();
            }
        }
        private global::System.Int32 _UserAccountTypeId;
        partial void OnUserAccountTypeIdChanging(global::System.Int32 value);
        partial void OnUserAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid aspnet_UserId
        {
            get
            {
                return _aspnet_UserId;
            }
            set
            {
                Onaspnet_UserIdChanging(value);
                ReportPropertyChanging("aspnet_UserId");
                _aspnet_UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("aspnet_UserId");
                Onaspnet_UserIdChanged();
            }
        }
        private global::System.Guid _aspnet_UserId;
        partial void Onaspnet_UserIdChanging(global::System.Guid value);
        partial void Onaspnet_UserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.Boolean _Gender;
        partial void OnGenderChanging(global::System.Boolean value);
        partial void OnGenderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_Country_UserAccount", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OmnipresenceModel.FK_Country_UserAccount", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OmnipresenceModel.FK_Country_UserAccount", "Countries").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("OmnipresenceModel.FK_Country_UserAccount", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("OmnipresenceModel.FK_Country_UserAccount", "Countries", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_EventCategory", "EventCategories")]
        public EntityCollection<EventCategory> EventCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventCategory>("OmnipresenceModel.FK_UserAccount_EventCategory", "EventCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventCategory>("OmnipresenceModel.FK_UserAccount_EventCategory", "EventCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_EventComment", "EventComments")]
        public EntityCollection<EventComment> EventComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventComment>("OmnipresenceModel.FK_UserAccount_EventComment", "EventComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventComment>("OmnipresenceModel.FK_UserAccount_EventComment", "EventComments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_Event", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OmnipresenceModel.FK_UserAccount_Event", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OmnipresenceModel.FK_UserAccount_Event", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccount_LogEventType", "LogEventTypes")]
        public EntityCollection<LogEventType> LogEventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LogEventType>("OmnipresenceModel.FK_UserAccount_LogEventType", "LogEventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LogEventType>("OmnipresenceModel.FK_UserAccount_LogEventType", "LogEventTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccountType_UserAccount", "UserAccountTypes")]
        public UserAccountType UserAccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccountTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccountTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccountType> UserAccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccountType>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccountTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccountType>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccountTypes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="UserAccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccountType object.
        /// </summary>
        /// <param name="userAccountTypeId">Initial value of the UserAccountTypeId property.</param>
        /// <param name="userTypeText">Initial value of the UserTypeText property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static UserAccountType CreateUserAccountType(global::System.Int32 userAccountTypeId, global::System.String userTypeText, global::System.Int32 createdByUserAccountId)
        {
            UserAccountType userAccountType = new UserAccountType();
            userAccountType.UserAccountTypeId = userAccountTypeId;
            userAccountType.UserTypeText = userTypeText;
            userAccountType.CreatedByUserAccountId = createdByUserAccountId;
            return userAccountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserAccountTypeId
        {
            get
            {
                return _UserAccountTypeId;
            }
            set
            {
                if (_UserAccountTypeId != value)
                {
                    OnUserAccountTypeIdChanging(value);
                    ReportPropertyChanging("UserAccountTypeId");
                    _UserAccountTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAccountTypeId");
                    OnUserAccountTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _UserAccountTypeId;
        partial void OnUserAccountTypeIdChanging(global::System.Int32 value);
        partial void OnUserAccountTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTypeText
        {
            get
            {
                return _UserTypeText;
            }
            set
            {
                OnUserTypeTextChanging(value);
                ReportPropertyChanging("UserTypeText");
                _UserTypeText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTypeText");
                OnUserTypeTextChanged();
            }
        }
        private global::System.String _UserTypeText;
        partial void OnUserTypeTextChanging(global::System.String value);
        partial void OnUserTypeTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserTypeDescription
        {
            get
            {
                return _UserTypeDescription;
            }
            set
            {
                OnUserTypeDescriptionChanging(value);
                ReportPropertyChanging("UserTypeDescription");
                _UserTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserTypeDescription");
                OnUserTypeDescriptionChanged();
            }
        }
        private global::System.String _UserTypeDescription;
        partial void OnUserTypeDescriptionChanging(global::System.String value);
        partial void OnUserTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_UserAccountType_UserAccount", "UserAccounts")]
        public EntityCollection<UserAccount> UserAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("OmnipresenceModel.FK_UserAccountType_UserAccount", "UserAccounts", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="OmnipresenceModel", Name="VisibilityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VisibilityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VisibilityType object.
        /// </summary>
        /// <param name="visibilityTypeId">Initial value of the VisibilityTypeId property.</param>
        /// <param name="visibilityText">Initial value of the VisibilityText property.</param>
        /// <param name="createdByUserAccountId">Initial value of the CreatedByUserAccountId property.</param>
        public static VisibilityType CreateVisibilityType(global::System.Int32 visibilityTypeId, global::System.String visibilityText, global::System.Int32 createdByUserAccountId)
        {
            VisibilityType visibilityType = new VisibilityType();
            visibilityType.VisibilityTypeId = visibilityTypeId;
            visibilityType.VisibilityText = visibilityText;
            visibilityType.CreatedByUserAccountId = createdByUserAccountId;
            return visibilityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VisibilityTypeId
        {
            get
            {
                return _VisibilityTypeId;
            }
            set
            {
                if (_VisibilityTypeId != value)
                {
                    OnVisibilityTypeIdChanging(value);
                    ReportPropertyChanging("VisibilityTypeId");
                    _VisibilityTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VisibilityTypeId");
                    OnVisibilityTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _VisibilityTypeId;
        partial void OnVisibilityTypeIdChanging(global::System.Int32 value);
        partial void OnVisibilityTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VisibilityText
        {
            get
            {
                return _VisibilityText;
            }
            set
            {
                OnVisibilityTextChanging(value);
                ReportPropertyChanging("VisibilityText");
                _VisibilityText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VisibilityText");
                OnVisibilityTextChanged();
            }
        }
        private global::System.String _VisibilityText;
        partial void OnVisibilityTextChanging(global::System.String value);
        partial void OnVisibilityTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VisibilityDescription
        {
            get
            {
                return _VisibilityDescription;
            }
            set
            {
                OnVisibilityDescriptionChanging(value);
                ReportPropertyChanging("VisibilityDescription");
                _VisibilityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VisibilityDescription");
                OnVisibilityDescriptionChanged();
            }
        }
        private global::System.String _VisibilityDescription;
        partial void OnVisibilityDescriptionChanging(global::System.String value);
        partial void OnVisibilityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedByUserAccountId
        {
            get
            {
                return _CreatedByUserAccountId;
            }
            set
            {
                OnCreatedByUserAccountIdChanging(value);
                ReportPropertyChanging("CreatedByUserAccountId");
                _CreatedByUserAccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedByUserAccountId");
                OnCreatedByUserAccountIdChanged();
            }
        }
        private global::System.Int32 _CreatedByUserAccountId;
        partial void OnCreatedByUserAccountIdChanging(global::System.Int32 value);
        partial void OnCreatedByUserAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("OmnipresenceModel", "FK_VisibilityType_Event", "Events")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("OmnipresenceModel.FK_VisibilityType_Event", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("OmnipresenceModel.FK_VisibilityType_Event", "Events", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
